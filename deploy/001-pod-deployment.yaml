# Generation of Kubernetes YAML is still under development!
#
# Save the output of this file and use kubectl create -f to import
# it into Kubernetes.
#
# Created with podman-1.8.1
---
apiVersion: v1
kind: Route
metadata:
  name: cpu-dummy-route
  namespace: arch-dummy
  labels:
    app: cpu-arch-report
spec:
  host: cpu-dummy.apps.ocp4.freebsd.us
  path: "/healthy"
  to:
    kind: Service
    name: cpu-dummy-svc
---
apiVersion: v1
kind: Service
metadata:
  namespace: arch-dummy
  name: cpu-dummy-svc
  labels:
    app: cpu-arch-report
spec:
  ports:
    - port: 8080 # the port that this service should serve on
      # the container on each pod to connect to, can be a name
      # (e.g. 'www') or a number (e.g. 80)
      targetPort: 8080
      protocol: TCP
  # just like the selector in the deployment,
  # but this time it identifies the set of pods to load balance
  # traffic to.
  selector:
    app: cpu-arch-report
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: cpu-arch-report
  namespace: arch-dummy
  name: cpu-dummy
spec:
  containers:
  - env:
    - name: PATH
      value: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    - name: TERM
      value: xterm
    - name: container
      value: oci
    - name: HOSTNAME
    #image: quay.io/eduardoarango/arch-dummy:latest
    image: image-registry.openshift-image-registry.svc:5000/arch-dummy/dummy-arch-info:latest

    name: cpu-dummy
    # define a liveness probe that checks every 5 seconds, starting after 5 seconds
    livenessProbe:
      httpGet:
        path: /healthz
        port: 8080
      initialDelaySeconds: 5
      periodSeconds: 5
    # define a readiness probe that checks every 5 seconds
    readinessProbe:
      httpGet:
        path: /healthz
        port: 8080
      periodSeconds: 5
    ports:
    - containerPort: 8080
      hostPort: 8080
      protocol: TCP
    resources: {}
    securityContext:
      allowPrivilegeEscalation: true
      capabilities: {}
      privileged: false
      readOnlyRootFilesystem: false
      seLinuxOptions: {}
    workingDir: /
status: {}
